# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        length = 0
        start = node = head
        while (node and node.next):
            node = node.next.next
            start = start.next
        return start
#         while start:
#             length +=1
#             start= start.next
#         counter = 0 
#         middle = length //2
        
#         while node:
#             if counter == middle:
#                 return node
#             else:
#                 counter +=1
#                 node = node.next
#                 print(node)
#         return None
